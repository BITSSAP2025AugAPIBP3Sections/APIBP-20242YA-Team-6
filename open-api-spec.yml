openapi: 3.1.0
info:
  title: Event Management API
  version: 1.1.0
  description: |
    RESTful API for the Event Management MVP covering Authentication, Events, Vendors, Tasks, Notifications, and Attendees.
    Supports JWT-based authentication and modular microservice structure.

servers:
  - url: https://api.eventmanager.com/v1
    description: Production server
  - url: http://localhost:4000/v1
    description: Local development server

tags:
  - name: Auth
  - name: Events
  - name: Vendors
  - name: Tasks
  - name: Notifications
  - name: Attendees

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        role:
          type: string
          enum: [admin, organizer, vendor, attendee]

    Event:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        location:
          type: string
        startAt:
          type: string
          format: date-time
        endAt:
          type: string
          format: date-time
        organizerId:
          type: string

    Vendor:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
        eventId:
          type: string

    Task:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        status:
          type: string
          enum: [pending, in_progress, completed]
        eventId:
          type: string
        vendorId:
          type: string
          nullable: true

    Notification:
      type: object
      properties:
        id:
          type: string
        recipientId:
          type: string
        type:
          type: string
        message:
          type: string
        createdAt:
          type: string
          format: date-time

    Attendee:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        eventId:
          type: string
        status:
          type: string
          enum: [invited, going, interested, not_going]
        rsvpAt:
          type: string
          format: date-time

paths:

  ##############################
  # AUTH SERVICE
  ##############################
  /auth/login:
    post:
      tags: [Auth]
      summary: Login and get JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        "200":
          description: JWT token response
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string

  /auth/register:
    post:
      tags: [Auth]
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password, role]
              properties:
                email:
                  type: string
                password:
                  type: string
                role:
                  type: string
      responses:
        "201":
          description: User registered
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"

  /auth/me:
    get:
      tags: [Auth]
      summary: Get current authenticated user
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Authenticated user details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"

